#!/bin/sh
echo  "remove and create working directory @CMAKE_RELEASE_DIRECTORY@"
rm -rf @CMAKE_RELEASE_DIRECTORY@ 
mkdir @CMAKE_RELEASE_DIRECTORY@

check_exit_value()
{
   VALUE="$1"
   if [ "$VALUE" != "0" ]; then
    echo "error in $2"
    exit 1
   fi      
}

if [ ! -z "@CC@" ]; then
    export CC="@CC@"
    check_exit_value $? "set CC compiler env var" || exit 1
fi

if [ ! -z "@CXX@" ]; then
    export CXX="@CXX@"
    check_exit_value $? "set CC compiler env var" || exit 1
fi
if [ ! -z "@LDFLAGS@" ]; then
    export LDFLAGS="@LDFLAGS@"
    check_exit_value $? "set CC compiler env var" || exit 1
fi

if [ ! -z "@USER_MAKE_RULE_FILE_CONTENTS@" ]; then
    echo "@USER_MAKE_RULE_FILE_CONTENTS@" > "@USER_MAKE_RULE_FILE@"
    check_exit_value $? "Create User Rule file" || exit 1
fi
echo "Create a directory to build in"
rm -rf @CMAKE_RELEASE_DIRECTORY@/@CMAKE_VERSION@-build
check_exit_value $? "Remove build tree" || exit 1
mkdir @CMAKE_RELEASE_DIRECTORY@/@CMAKE_VERSION@-build
check_exit_value $? "Create build directory" || exit 1
# make sure directory was created
if [ ! -d @CMAKE_RELEASE_DIRECTORY@/@CMAKE_VERSION@-build ]; then
        echo "Could not create @CMAKE_RELEASE_DIRECTORY@/@CMAKE_VERSION@-build"
        exit -1
fi

echo "Create initial cache"
echo "@INITIAL_CACHE@" > @CMAKE_RELEASE_DIRECTORY@/@CMAKE_VERSION@-build/CMakeCache.txt
check_exit_value $? "Create initial cache" || exit 1

#echo "Login into cvs."
#echo "cmake" | @CVS_COMMAND@ -d @CVSROOT@ login

echo "Checkout the source for @CMAKE_VERSION@"
cd @CMAKE_RELEASE_DIRECTORY@ 
@CMAKE_CHECKOUT@ -d @CMAKE_VERSION@ CMake
check_exit_value $? "Checkout cmake source" || exit 1

cd @CMAKE_RELEASE_DIRECTORY@/@CMAKE_VERSION@-build 
echo  "Run cmake bootstrap --parallel=@PROCESSORS@"
../@CMAKE_VERSION@/bootstrap --parallel=@PROCESSORS@
check_exit_value $? "Bootstrap cmake" || exit 1

echo "Build cmake with @MAKE@"
@MAKE@
check_exit_value $? "Build cmake" || exit 1

echo "Run cmake tests"
@MAKE@ test
check_exit_value $? "Test cmake" || exit 1

echo "Run package"
@MAKE@ package
check_exit_value $? "Package cmake" || exit 1

echo "Create Tar.gz"
./bin/cpack -G TGZ
check_exit_value $? "Create TGZ" || exit 1

exit 0
